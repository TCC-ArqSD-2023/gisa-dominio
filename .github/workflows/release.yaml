name: Constrói, publica pacote Nuget e gera tag de uma versão

on:
  push:
    branches:
    - main
jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Verifica se o commit existe em origin/main
      run: |
        git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
        git branch --remote --contains | grep origin/main
    #- name: Define variável VERSAO a partir da tag
    #  run: echo "VERSAO=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV
    - name: Obtem versão do csproj
      uses: kzrnm/get-net-sdk-project-versions-action@v1
      id: get-version
      with:
        proj-path: GisaDominio.csproj
    - run: echo "VERSAO=${{steps.get-version.outputs.version}}" >> $GITHUB_ENV 
    - name: Configurar nuget
      run: dotnet nuget add source https://nuget.pkg.github.com/TCC-ArqSD-2023/index.json -n github -u dinobri -p ${DINOBRIPAT_NUGET} --store-password-in-clear-text
      env:
        DINOBRIPAT_NUGET: ${{ secrets.DINOBRIPAT_NUGET }}
    - name: Build
      run: dotnet build --configuration Release /p:Version=${VERSAO}
    - name: Pack
      run: dotnet pack --configuration Release /p:Version=${VERSAO} --no-build --output .
    - name: Tag
      uses: anothrNick/github-tag-action@1.62.0
      env: 
        GITHUB_TOKEN: ${{ secrets.DINOBRIPAT_NUGET }}
        CUSTOM_TAG: 'v${{ steps.get-version.outputs.version }}'
    - name: Push
      run: dotnet nuget push Gisa.GisaDominio.${VERSAO}.nupkg --source https://nuget.pkg.github.com/TCC-ArqSD-2023/index.json --api-key ${DINOBRIPAT_NUGET}
      env:
        DINOBRIPAT_NUGET: ${{ secrets.DINOBRIPAT_NUGET }}